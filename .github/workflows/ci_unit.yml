name: CI (unit tests)

on:
  merge_group: # GitHub Merge Queue
  pull_request:
  push:
    branches:
      - master
    tags: '*'

env:
  JULIA_PKG_UNPACK_REGISTRY: 'true'
  JULIA_PKG_USE_CLI_GIT: 'true'

jobs:

  registryci-unit:
    name: RegistryCI Unit/Julia ${{ matrix.version }}/${{ matrix.os }}/${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x64
        os:
          - ubuntu-latest
        version:
          - '1.3'
          - '1.4'
          - '1.5'
          - '1.6'
          - '1.7'
          - '1.8'
          - '1'
          - 'nightly'
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
        with:
          project: RegistryCI.jl
      - uses: julia-actions/julia-runtest@v1
        with:
          project: RegistryCI.jl
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: RegistryCI.jl/src
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}

  automerge-unit:
    name: AutoMerge Unit/Julia ${{ matrix.version }}/${{ matrix.os }}/${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x64
        os:
          - ubuntu-latest
        version:
          - '1.6'
          - '1.10'
          - '1'
          - 'nightly'
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
        with:
          project: AutoMerge.jl
      - uses: julia-actions/julia-runtest@v1
        with:
          project: AutoMerge.jl
        env:
          AUTOMERGE_RUN_INTEGRATION_TESTS: "false"
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: AutoMerge.jl/src
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}

  documentation:
    env:
      JULIA_PKG_UNPACK_REGISTRY: 'false'
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/cache@v2
      - run: |
          julia --project=docs -e '
            using Pkg
            # install compressed registry
            Pkg.Registry.rm("General")
            Pkg.Registry.add("General")
            Pkg.develop(PackageSpec(path="RegistryCI.jl"))
            Pkg.develop(PackageSpec(path="AutoMerge.jl"))
            Pkg.instantiate()'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}

  doctests:
    name: Doctests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/cache@v2
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path="RegistryCI.jl"))
            Pkg.develop(PackageSpec(path="AutoMerge.jl"))
            Pkg.instantiate()'
        env:
          JULIA_PKG_SERVER: ''
      - run: |
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using RegistryCI, AutoMerge
            doctest(RegistryCI; manual="docs/src")
            doctest(AutoMerge; manual="docs/src")'
